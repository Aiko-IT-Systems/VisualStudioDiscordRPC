name: MSBuild

on:
  push:
    branches: release

env:
  SOLUTION_FILE_PATH: .
  BUILD_CONFIGURATION: Release
  PUBLISH_MANIFEST_FILENAME: publishManifest.json

  VS2019_PROJECT: VisualStudioDiscordRPC.Dev16
  VS2022_PROJECT: VisualStudioDiscordRPC.Dev17

jobs:
  build:
    runs-on: windows-latest

    env:
      VSIX_PATH_2019: ${{ SOLUTION_FILE_PATH }}\${{ VS2019_PROJECT }}\bin\Release\${{ VS2019_PROJECT }}.vsix
      PUBLISH_MANIFEST_PATH_2019: ${{ SOLUTION_FILE_PATH }}\${{ VS2019_PROJECT }}\${{ PUBLISH_MANIFEST_FILENAME }}

      VSIX_PATH_2022: ${{ SOLUTION_FILE_PATH }}\${{ VS2022_PROJECT }}\bin\Release\${{ VS2022_PROJECT }}.vsix
      PUBLISH_MANIFEST_PATH_2022: ${{ SOLUTION_FILE_PATH }}\${{ VS2022_PROJECT }}\${{ PUBLISH_MANIFEST_FILENAME }}

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{ env.GITHUB_WORKSPACE }}
      run: nuget restore ${{ env.SOLUTION_FILE_PATH }}

    - name: Build
      working-directory: ${{ env.GITHUB_WORKSPACE }}
      run: msbuild /m /p:Configuration=${{ env.BUILD_CONFIGURATION }} ${{ env.SOLUTION_FILE_PATH }}

    - name: Publish extension for Visual Studio 2019 to Marketplace
      uses: cezarypiatek/VsixPublisherAction@0.2
      with:
          extension-file: ${{ env.VSIX_PATH_2019 }}
          publish-manifest-file: ${{ env.PUBLISH_MANIFEST_PATH_2019 }}
          personal-access-code: ${{ secrets.MARKETPLACE_TOKEN }}

    - name: Publish extension for Visual Studio 2022 to Marketplace
      uses: cezarypiatek/VsixPublisherAction@0.2
      with:
          extension-file: ${{ env.VSIX_PATH_2022 }}
          publish-manifest-file: ${{ env.PUBLISH_MANIFEST_PATH_2022 }}
          personal-access-code: ${{ secrets.MARKETPLACE_TOKEN }}

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Test upload-to-github-release works with ```actions/create-release```
        draft: true
        prerelease: false

    - name: Upload GitHub release
      uses: xresloader/upload-to-github-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: ${{ env.VSIX_PATH_2022 }};${{ env.VSIX_PATH_2019 }}
        release_id: ${{ steps.create_release.outputs.id }}
